trigger:
- develop

pool:
  name: linux-agentpool

variables:
  - template: ../Templates/Variables/dev.yml
  - group: optix

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: Build
    displayName: 'Build and Test'
    steps:
    - task: DockerInstaller@0
      displayName: 'install docker'
      inputs:
        dockerVersion: '17.09.0-ce'
    - task: Docker@2
      displayName: 'build and push docker image'
      inputs:
        containerRegistry: $(AZURE_CONNECTION)
        repository: $(repository)
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: $(Build.BuildId)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      displayName: 'publish Artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'artifact'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy image
  jobs:  
  - job: Deploy
    displayName: Deploy
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'artifact'
        itemPattern: '**/*.yaml'
        targetPath: '$(System.ArtifactsDirectory)'

    - task: Bash@3
      displayName: 'install helm'
      inputs:
        targetType: 'inline'
        script: 'curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash'

    - task: Bash@3
      displayName: 'deploy helm chart'
      inputs:
        targetType: 'inline'
        script: |
          az login --service-principal --username ${ARM_CLIENT_ID} --password ${ARM_CLIENT_SECRET} --tenant ${ARM_TENANT_ID}
          az account set --subscription ${ARM_SUBSCRIPTION_ID}
          az aks get-credentials --resource-group ${RESOURCE_GROUP_NAME} --name ${CLUSTER_NAME} --admin
          helm upgrade $RELEASE $CHART --install --create-namespace --namespace $NAMESPACE --values $VALUES --force


    # - task: KubectlInstaller@0
    #   inputs:
    #     kubectlVersion: 'latest'
     
    # - task: KubernetesManifest@0
    #   inputs:
    #     action: 'deploy'
    #     kubernetesServiceConnection: 'AKS-k8scluster-svc'
    #     namespace: 'default'
    #     manifests: '$(System.ArtifactsDirectory)/manifest-NOT-IN-USE/deployment.yaml'
    #     containers: 'optix-app:$(tag)'

    # - task: HelmDeploy@0
    #   inputs:
    #     connectionType: 'Azure Resource Manager'
    #     azureSubscription: 'sam'
    #     azureResourceGroup: 'optix_rg'
    #     kubernetesCluster: 'optix-aks'
    #     useClusterAdmin: true
    #     namespace: 'optixdeploy'
    #     command: 'upgrade'
    #     chartType: 'FilePath'
    #     chartPath: '$(System.DefaultWorkingDirectory)/charts/optix'
    #     releaseName: 'optixdeploy'
    #     valueFile: '$(System.DefaultWorkingDirectory)/charts/optix/values.yaml'
    #     force: true
    #     waitForExecution: false
